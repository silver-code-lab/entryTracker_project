name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION:     ap-south-1
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: entrytracker
  ECR_REGISTRY:   ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # DEBUG: וידוא שה־Secrets אכן קיימים
      - name: Debug AWS secrets
        run: |
          echo "ACCESS_KEY_ID = '${{ secrets.AWS_ACCESS_KEY_ID }}'"
          echo "SECRET_ACCESS_KEY = '${{ secrets.AWS_SECRET_ACCESS_KEY }}'"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build & tag Docker image
        run: |
          docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            -t $ECR_REPOSITORY:latest .

      - name: Push image to ECR
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ec2-user
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/entryTracker_project
            docker compose pull entrytracker:latest
            docker compose up -d
